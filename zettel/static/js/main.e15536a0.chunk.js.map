{"version":3,"sources":["Schnipsel.js","Kopfzeile.js","Tabelle.js","Zettel.js","App.js","serviceWorker.js","index.js"],"names":["Schnipsel","props","className","laufNummer","Kopfzeile","Tabelle","Zettel","App","useState","show","setShow","numZettel","setNumZettel","startOffset","setStartOffset","type","onChange","e","Number","parseInt","target","value","placeholder","onClick","Array","Math","floor","fill","map","_","rowIx","ix","toString","padStart","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e15536a0.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Schnipsel(props) {\n    return (\n        <div className=\"Schnipsel\">\n            <div className=\"SchnipselBody\">\n                <div className=\"SchnipselBodyHeadlines\">\n                    <h4>Schneiderei Wagner</h4>\n                    <h4 className=\"SchnipselBodyHeadlinesNummer\">{props.laufNummer}</h4>\n                </div>\n                <div className=\"SchnipselBodyTop\">\n                    <div className=\"SchnipselBodyTopLeft\">\n                        <span>Abholdatum:</span>\n                        <span>Preis:</span>\n                        <span>Teile:</span>\n                    </div>\n                    <div className=\"SchnipselBodyTopRight\">\n                        <hr />\n                        <hr />\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"SchnipselBodyBottom\">\n                    <div className=\"SchnipselBodyBottomContent\">\n                        <div>Martinistr. 60, 28195 Bremen</div>\n                        <div>0421 1695489</div>\n                        <div>Mo. - Di. 7-18 Uhr</div>\n                        <div>Mi. 7-15 Uhr</div>\n                        <div>Do. - Fr. 7-18 Uhr</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Schnipsel","import React from 'react';\n\nfunction Kopfzeile(props) {\n    return (\n        <div className=\"Kopfzeile\">\n            <div className=\"KopfzeileKopf\">\n                <h3>Schneiderei Wagner</h3>\n                <h3>{props.laufNummer}</h3>\n            </div>\n            <span className=\"KopfzeilenText\">Datum:</span>\n            <span className=\"KopfzeilenText\">Tel:</span>\n        </div>\n    )\n}\n\nexport default Kopfzeile","import React from 'react'\n\nexport default function Tabelle(props) {\n    return (\n        <div className=\"Tabelle\">\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>Hose</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>Sakko</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>Jacke</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>Mantel</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>Rock</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>Kleid</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>Pullover</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>&nbsp;</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>&nbsp;</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>&nbsp;</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>&nbsp;</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>&nbsp;</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>&nbsp;</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n            <div className=\"Zeile\">\n                <div className=\"SpalteA\"></div>\n                <div className=\"SpalteB\"><span>&nbsp;</span></div>\n                <div className=\"SpalteC\"></div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport Schnipsel from './Schnipsel'\nimport Kopfzeile from './Kopfzeile'\nimport Tabelle from './Tabelle'\n\nfunction Zettel(props) {\n    return (\n        <>\n        <div className=\"Zettel\">\n            <Kopfzeile laufNummer={props.laufNummer} />\n            <Tabelle />\n            <Schnipsel laufNummer={props.laufNummer} />\n        </div>\n        </>\n    )\n}\n\nexport default Zettel","import React, { useState } from 'react';\nimport Zettel from './Zettel'\n\nfunction App() {\n\n  const [show, setShow] = useState(true);\n  const [numZettel, setNumZettel] = useState(0);\n  const [startOffset, setStartOffset] = useState(1);\n\n  return (\n    <>\n      { show && \n        <div>\n          <input type=\"text\" onChange={ (e) => setNumZettel(Number.parseInt(e.target.value)) } placeholder=\"Anzahl\"/>\n          <input type=\"text\" onChange={ (e) => setStartOffset(Number.parseInt(e.target.value)) } placeholder=\"Erste Nummer\"/>\n          <button onClick={() => { setShow(false) }}>Давай!</button>\n        </div>\n      }\n      {\n        !show && numZettel >= 3 && new Array(Math.floor(numZettel / 3)).fill(0).map(\n          (_, rowIx) => (\n            <div className=\"page\">\n            {\n              new Array(3).fill(0).map(\n                (_, ix) => (\n                  <Zettel \n                    laufNummer={\n                      (rowIx * 3 + ix+startOffset).toString().padStart(6, '0')\n                    }\n                  />\n                )\n              )\n            }\n            </div>\n          )\n        )\n      }\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}