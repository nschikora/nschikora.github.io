{"version":3,"sources":["App.js","index.js"],"names":["MS_PER_MIN","MS_PER_HOUR","MS_PER_DAY","timeUntil","fromDate","toDate","ms","Date","valueOf","days","Math","floor","toString","hours","padStart","mins","secs","AddTimerControl","props","useState","name","setName","toISOString","substring","date","setDate","onTimerAdded","type","onChange","e","target","value","onClick","key","round","random","Timer","now","className","App","presentingAddTimerControl","setPresentingAddTimerControl","timers","setTimers","setNow","useEffect","url","URL","document","location","searchParams","get","JSON","parse","interval","setInterval","clearInterval","linklocation","append","stringify","timer","href","map","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPAIMA,EAAa,IACbC,EAAc,KACdC,EAAa,MAEnB,SAASC,EAAUC,EAAUC,GAC3B,IACIC,EADS,IAAIC,KAAKF,GAAQG,UACdJ,EACVK,EAAOC,KAAKC,MAAML,EAAKJ,GAAYU,WACzCN,GAAMG,EAAOP,EACb,IAAMW,EAAQH,KAAKC,MAAML,EAAKL,GAAaW,WAAWE,SAAS,EAAG,KAClER,GAAMO,EAAQZ,EACd,IAAMc,EAAOL,KAAKC,MAAML,EAAKN,GAAYY,WAAWE,SAAS,EAAG,KAChER,GAAMS,EAAOf,EACb,IAAMgB,EAAON,KAAKC,MAAML,EAdT,KAcwBM,WAAWE,SAAS,EAAG,KAC9D,MAAM,GAAN,OAAUL,EAAV,aAAmBI,EAAnB,aAA6BE,EAA7B,aAAsCC,EAAtC,KAGF,SAASC,EAAgBC,GAAQ,IAAD,EACNC,mBAAS,IADH,mBACvBC,EADuB,KACjBC,EADiB,OAENF,oBAAS,IAAIZ,MAAOe,cAAcC,UAAU,EAAG,KAFzC,mBAEvBC,EAFuB,KAEjBC,EAFiB,KAItBC,EAAiBR,EAAjBQ,aAOR,OACE,gCACE,2CACA,uBAAOC,KAAM,OAAQC,SARC,SAAAC,GAAC,OAAIR,EAAQQ,EAAEC,OAAOC,QAQMA,MAAOX,IACzD,uBAAOO,KAAM,OAAQC,SARC,SAAAC,GAAC,OAAIJ,EAAQI,EAAEC,OAAOC,QAQMA,MAAOP,IACzD,wBAAQQ,QAPK,kBAAMN,EAAa,CAACN,OAAMI,OAAMS,IAAI,SAAD,OAAWvB,KAAKwB,MAAoB,IAAdxB,KAAKyB,cAO3E,iBACA,0BAKN,SAASC,EAAMlB,GAAQ,IACdE,EAAmBF,EAAnBE,KAAMI,EAAaN,EAAbM,KAAMa,EAAOnB,EAAPmB,IAEnB,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBlB,IACvB,qBAAKkB,UAAU,OAAf,SAAuBnC,EAAUkC,EAAKb,QAkD7Be,MA7Cf,WAAgB,IAAD,EACqDpB,oBAAS,GAD9D,mBACNqB,EADM,KACqBC,EADrB,OAEetB,mBAAS,IAFxB,mBAENuB,EAFM,KAEEC,EAFF,OAGSxB,mBAASZ,KAAK8B,OAHvB,mBAGNA,EAHM,KAGDO,EAHC,KAObC,qBAAU,WACR,IAAMC,EAAM,IAAIC,IAAIC,SAASC,UACzBT,GAA6BM,EAAII,aAAaC,IAAI,YACpDV,GAA6B,GAC7BE,EAAUS,KAAKC,MAAMP,EAAII,aAAaC,IAAI,eAE3C,CAACX,IAEJK,qBAAU,WACR,IAAMS,EAAWC,aAAY,WAC3BX,EAAOrC,KAAK8B,SACX,KACH,OAAO,WACLmB,cAAcF,OAIlB,IAAMG,EAAe,IAAIV,IAAIC,SAASC,UAGtC,OAFAQ,EAAaP,aAAaQ,OAAO,SAAUN,KAAKO,UAAUjB,IAGxD,sBAAKJ,UAAU,MAAf,UAEIE,GACE,qCACE,cAACvB,EAAD,CAAiBS,aA3BF,SAAAkC,GAAK,OAAIjB,EAAU,GAAD,mBAAKD,GAAL,CAAakB,QA4B9C,mBAAGC,KAAMJ,EAAa7C,WAAtB,qBAGN,qBAAK0B,UAAU,SAAf,SAEII,EAAOoB,KAAK,SAAAF,GAAK,OAAI,wBAACxB,EAAD,2BAAWwB,GAAX,IAAkB3B,IAAK2B,EAAM3B,IAAKI,IAAKA,cCvFtE0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,W","file":"static/js/main.799ea5dd.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nconst MS_PER_S = 1000;\nconst MS_PER_MIN = 60 * MS_PER_S;\nconst MS_PER_HOUR = 60 * MS_PER_MIN;\nconst MS_PER_DAY = 24 * MS_PER_HOUR;\n\nfunction timeUntil(fromDate, toDate) {\n  const when = new Date(toDate).valueOf();\n  let ms = when - fromDate;\n  const days = Math.floor(ms / MS_PER_DAY).toString()\n  ms -= days * MS_PER_DAY;\n  const hours = Math.floor(ms / MS_PER_HOUR).toString().padStart(2, '0');;\n  ms -= hours * MS_PER_HOUR;\n  const mins = Math.floor(ms / MS_PER_MIN).toString().padStart(2, '0');;\n  ms -= mins * MS_PER_MIN;\n  const secs = Math.floor(ms / MS_PER_S).toString().padStart(2, '0');;\n  return `${days}d ${hours}h ${mins}m ${secs}s`;\n}\n\nfunction AddTimerControl(props) {\n  const [name, setName] = useState('');\n  const [date, setDate] = useState(new Date().toISOString().substring(0, 10));\n  \n  const { onTimerAdded } = props;\n  \n  const handleNameChanged = e => setName(e.target.value);\n  const handleDateChanged = e => setDate(e.target.value)\n\n  const addTimer = () => onTimerAdded({name, date, key: `timer-${Math.round(Math.random()*1e3)}`});\n\n  return (\n    <div>\n      <h1>Add timer</h1>\n      <input type={'text'} onChange={handleNameChanged} value={name} />\n      <input type={'date'} onChange={handleDateChanged} value={date} />\n      <button onClick={addTimer}>Add</button>\n      <hr />\n    </div>\n  )\n}\n\nfunction Timer(props) {\n  const {name, date, now} = props;\n\n  return (\n    <div className=\"Timer\">\n      <div className=\"Name\">{name}</div>\n      <div className=\"Time\">{timeUntil(now, date)}</div>\n    </div>\n  )\n}\n\nfunction App() {\n  const [presentingAddTimerControl, setPresentingAddTimerControl] = useState(true);\n  const [timers, setTimers] = useState([]);\n  const [now, setNow] = useState(Date.now());\n\n  const handleTimerAdded = timer => setTimers([...timers, timer]);\n\n  useEffect(() => {\n    const url = new URL(document.location);\n    if (presentingAddTimerControl && url.searchParams.get('timers')) {\n      setPresentingAddTimerControl(false);\n      setTimers(JSON.parse(url.searchParams.get('timers')));\n    }\n  }, [presentingAddTimerControl]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(Date.now());\n    }, 1000);\n    return () => {\n      clearInterval(interval)\n    }\n  });\n\n  const linklocation = new URL(document.location);\n  linklocation.searchParams.append('timers', JSON.stringify(timers));\n\n  return (\n    <div className=\"App\">\n      {\n        presentingAddTimerControl && \n          <>\n            <AddTimerControl onTimerAdded={handleTimerAdded} />\n            <a href={linklocation.toString()}>Link</a>\n          </>\n      }\n      <div className=\"Timers\">\n        {\n          timers.map( timer => <Timer {...timer} key={timer.key} now={now}/> )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}